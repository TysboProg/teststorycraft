generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int           @id @default(autoincrement())
  username        String        @unique
  email           String        @unique
  role            Role          @default(reader)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  isVerified      Boolean       @default(false)
  displayName     String?
  bio             String?
  avatarUrl       String?
  password        String
  stories         Story?
  settings        UserSettings?
  favoriteStories Story[]       @relation("UserFavoriteStories")
  User_A          User[]        @relation("UserFollows")
  User_B          User[]        @relation("UserFollows")
}

model Story {
  id           Int      @id @default(autoincrement())
  title        String
  authorId     Int      @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isPublic     Boolean  @default(false)
  choices      Choice[]
  scenes       Scene[]
  author       User     @relation(fields: [authorId], references: [id])
  isFavoriteBy User[]   @relation("UserFavoriteStories")
}

model Scene {
  id          Int      @id @default(autoincrement())
  title       String
  image       String?
  isEnd       Boolean  @default(false)
  storyId     Int
  description String
  choices     Choice[]
  Story       Story    @relation(fields: [storyId], references: [id])
}

model Choice {
  id        Int     @id @default(autoincrement())
  text      String
  nextScene Int
  access    Boolean @default(true)
  sceneId   Int?
  storyId   Int
  Scene     Scene?  @relation(fields: [sceneId], references: [id])
  Story     Story   @relation(fields: [storyId], references: [id])
}

model UserSettings {
  theme    String @default("dark")
  language String @default("en")
  userId   Int    @unique
  user     User   @relation(fields: [userId], references: [id])
}

enum Role {
  admin
  moderator
  reader
}
